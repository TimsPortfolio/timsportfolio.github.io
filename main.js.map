{"version":3,"sources":["./src/app/sec2-as2/sec2-as2.component.ts","./src/app/sec2-as2/sec2-as2.component.html","./src/environments/environment.ts","./src/app/server/server.component.ts","./src/app/server/server.component.html","./src/app/warning-alert/warning-alert.component.ts","./src/app/warning-alert/warning-alert.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/sec2-as3/sec2-as3.component.html","./src/app/sec2-as3/sec2-as3.component.ts","./src/app/servers/servers.component.html","./src/app/servers/servers.component.ts","./src/app/success-alert/success-alert.component.ts","./src/app/success-alert/success-alert.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sec2-as2',\n  templateUrl: './sec2-as2.component.html',\n  styleUrls: ['./sec2-as2.component.css']\n})\nexport class Sec2As2Component implements OnInit {\n  username = '';\n  msg = '';\n  disableButton = true;\n  color = 'black';\n  accounts= [];\n  changeCheck = '';\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  getColor(){\n    return this.color;\n  }\n\n  clearUsername(){\n    this.msg = 'The username \"' + this.username + '\" was created.'\n    this.changeCheck = this.msg;\n    this.accounts.push(this.username);\n    this.username = ''\n    this.disableButton = true;\n    this.color = \"green\";\n    setTimeout(() => {\n      if (this.msg === this.changeCheck){\n        this.msg = '';\n      }\n    },2000)\n  }\n  checkUsername(){\n    if(this.username === ''){\n      this.msg = '';\n      this.disableButton = true;\n    } else if(this.username.length < 5){\n      this.msg = 'Username \"' + this.username + '\" must be at least 5 characters.';\n      this.disableButton = true;\n      this.color = \"red\";\n    } else if(this.username.startsWith(\" \")|| this.username.endsWith(\" \")){\n      this.disableButton = true;\n      this.msg = 'Username \"' + this.username + '\" must not start or end with whitespace';\n      this.color = \"red\";\n    } else if(this.accounts.includes(this.username)){\n      this.msg = 'Username \"' + this.username + '\" is taken.';\n      this.disableButton = true;\n      this.color = \"red\";\n    } else {\n      this.msg = 'Username \"' + this.username + '\" is available.';\n      this.disableButton = false;\n      this.color = \"green\"\n    }\n  }\n}\n","<label>Enter Username:</label>\n<input\n    type=\"text\"\n    class=\"form-control\"\n    (input)=\"checkUsername()\"\n    [(ngModel)]=\"username\">\n\n    <button\n    class=\"btn btn-primary\"\n    [disabled]=\"disableButton\"\n    (click)=\"clearUsername()\"\n    >Create</button>\n\n<p [ngStyle]=\"{color: getColor()}\">{{ msg }}</p>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-server',\r\n    templateUrl: './server.component.html',\r\n    styles: [`\r\n        .onlineColor {\r\n            color: white;\r\n        }\r\n    `]\r\n})\r\nexport class ServerComponent{\r\n    serverId: number = 10;\r\n    serverStatus: string = \"offline\";\r\n    //Variable type declaration not necesssary\r\n\r\n    constructor(){\r\n        this.serverStatus = Math.random() > 0.5 ? 'online' : 'offline';\r\n    }\r\n\r\n    getServerStatus() {\r\n        return this.serverStatus;\r\n    }\r\n\r\n    getColor() {\r\n        return this.serverStatus === 'online' ? 'green' : 'red';\r\n    }\r\n}","<p\r\n    [ngStyle]=\"{backgroundColor: getColor()}\"\r\n    [ngClass]=\"{onlineColor: serverStatus === 'online'}\"\r\n    >Server with ID {{ serverId }} is {{ getServerStatus() }}</p>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-warning-alert',\n  templateUrl: './warning-alert.component.html',\n  styleUrls: ['./warning-alert.component.css']\n})\nexport class WarningAlertComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>warning-alert works!</p>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  // styleUrls: ['./app.component.css']\n  styles: [\n    `\n      h3{\n        color: red;\n      }\n    `\n  ]\n})\nexport class AppComponent {\n}\n","<div class=\"container\">\r\n    <div class=\"row\">\r\n        <div class=\"col-xs-12\">\r\n            <h3>App Component</h3>\r\n            <h4>Timothy's First Project</h4>\r\n            <hr>\r\n            <app-servers></app-servers>\r\n            <!--<div app-servers></div>-->\r\n            <!--<div class=\"app-servers\"></div>-->\r\n            <hr>\r\n            <app-success-alert></app-success-alert>\r\n            <app-warning-alert></app-warning-alert>\r\n            <hr>\r\n            <app-sec2-as2></app-sec2-as2>\r\n            <hr>\r\n            <app-sec2-as3></app-sec2-as3>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { ServerComponent} from './server/server.component';\nimport { ServersComponent } from './servers/servers.component';\nimport { WarningAlertComponent } from './warning-alert/warning-alert.component';\nimport { SuccessAlertComponent } from './success-alert/success-alert.component';\nimport { Sec2As2Component } from './sec2-as2/sec2-as2.component';\nimport { Sec2As3Component } from './sec2-as3/sec2-as3.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ServerComponent,\n    ServersComponent,\n    WarningAlertComponent,\n    SuccessAlertComponent,\n    Sec2As2Component,\n    Sec2As3Component\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<button\nclass=\"btn btn-primary\"\n(click)=\"displayDetails()\"\n>Display Details</button>\n<p *ngIf=\"showPassword; else hidden\">Secret Password = tuna</p>\n<ng-template #hidden>\n    <p>Password Hidden</p>\n</ng-template>\n<p *ngFor=\"let item of clickLog\"\n[ngClass]=\"{'bigItems': item >= 5}\"\n>{{item}}</p>\n\n<!--[ngStyle]=\"{backgroundColor: getColor()}\"-->","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sec2-as3',\n  templateUrl: './sec2-as3.component.html',\n  styleUrls: ['./sec2-as3.component.css']\n})\nexport class Sec2As3Component implements OnInit {\n  showPassword = false;\n  clickLog = [];\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  displayDetails(){\n    /*\n    if(this.showPassword === false){\n      this.showPassword = true;\n    } else {\n      this.showPassword = false;\n    }\n    */\n   this.showPassword = !this.showPassword;\n\n    this.clickLog.push(this.clickLog.length+1);\n    console.log(this.clickLog)\n  }\n\n  getColor(){\n    return this.clickLog.length >= 5 ? 'blue' : '';\n  }\n}\n","<label>Server Name</label>\n<input\n    type=\"text\"\n    class=\"form-control\"\n    (input)=\"onUpdateServerName($event)\">\n\n<p>{{ serverName }}</p>\n\n<input\n    type=\"text\"\n    class=\"form-control\"\n    [(ngModel)]=\"serverName2\">\n    \n<!--<p>{{ serverName2 }}</p>-->\n\n\n<button\n    class=\"btn btn-primary\"\n    [disabled]=\"!allowNewServer\"\n    (click)=\"onCreateServer()\"\n    >Add Server</button>\n<!--<p>{{ serverCreationStatus }}</p>-->\n<p *ngIf=\"serverCreated; else noServer\">Server was created, server is: {{ serverName2 }}</p>\n<ng-template #noServer>\n    <p>No server was created!</p>\n</ng-template>\n<!--<p [innerText]=\"allowNewServer\"></p>-->\n\n\n<hr>\n<app-server *ngFor=\"let server of servers\"></app-server>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  //selector: '[app-servers]',\n  //selector: '.app-servers',\n  selector: 'app-servers',\n  templateUrl: './servers.component.html',\n\n  styleUrls: ['./servers.component.css']\n})\nexport class ServersComponent implements OnInit {\n  allowNewServer = false;\n  serverCreationStatus = \"No Server Was Created\";\n  serverName = 'Test';\n  serverName2= 'Test2';\n  serverCreated = false;\n  servers = ['Testserver', 'Testserver 2']\n\n  constructor() {\n    setTimeout(() => {\n      this.allowNewServer = true;\n    },2000)\n   }\n\n  ngOnInit(): void {\n  }\n\n  onCreateServer(){\n    this.serverCreated = true;\n    this.servers.push(this.serverName);\n    this.serverCreationStatus = \"Server Was Created: \" + this.serverName2;\n  }\n\n  onUpdateServerName(event: any){\n    console.log(event);\n    this.serverName = (<HTMLInputElement>event.target).value;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-success-alert',\n  templateUrl: './success-alert.component.html',\n  styleUrls: ['./success-alert.component.css']\n})\nexport class SuccessAlertComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>success-alert works!</p>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}